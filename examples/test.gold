print "Hello, World!"; # This is a comment

func add do
  param a int;
  param b int;
  returns int;

  return (a + b);
end

def i int;
(0) => i;
while (i < 10) do
 (i + 1) => i;
 print (i);
end

if (1 = 1) do
  print "Hi";
else
  print "Ho";
end

def sum int;
call add 1 2 => sum;
print (sum);

# Arrays
def a int{};

append (a) 1;
append (a) 2;
append (a) 3;

grow (a) 4;
(0) => ([3]a);

print ([0]a);

# Maps
def map map{string}string;
("Hello") => (["Hi"]map);
("Hello, World!") => (["Hi"]map); # Original value will be freed 
print (["Hi"]map);

# Nested maps
def m map{string}map{string}string;
def v map{string}string;
(v) => (["Sup"]m); # Need to allocate the key by using v
# NOTE: Any changes to v will also apply to the "Sup" key of m

# Nested assigns
("Hello!") => (["Hi"]["Sup"]m);

print (["Hi"]["Sup"]m);

# Switch
def switchval string;
("Hi") => switchval;

switch (switchval) do
  case "a" do
    print "its a";
  end

  case "b" do
    print "its b";
  end

  default do
    print "unknown!";
  end
end